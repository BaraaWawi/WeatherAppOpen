//
//  WeatherAppOpenTests.swift
//  WeatherAppOpenTests
//
//  Created by Baraa Wawi on 09/09/2024.
//

import XCTest
@testable import WeatherAppOpen


class WeatherViewModelTests: XCTestCase {

    var weatherViewModel: WeatherViewModel!
    var mockCacheManager: CacheManager!
    
    override func setUp() {
        super.setUp()
        weatherViewModel = WeatherViewModel()
        mockCacheManager = CacheManager.shared
        mockCacheManager.clearAllCache() 
    }
    
    override func tearDown() {
        weatherViewModel = nil
        mockCacheManager = nil
        super.tearDown()
    }
    
    func testFetchingWeatherDataFromCache() {
        
        let cachedData = [CountryWeatherModel(city: "amman", weather: [WeatherInfoModel(mintempC: "10", maxtempC: "20", avgtempC: "15", sunHour: "9")])]
        mockCacheManager.saveToCache(data: cachedData)
        
        
        let expectation = XCTestExpectation(description: "Fetching data from cache")
        
        weatherViewModel.getItemsList {
            
            XCTAssertEqual(self.weatherViewModel.weatherData.first?.city, "amman")
            XCTAssertEqual(self.weatherViewModel.weatherData.first?.weather.first?.mintempC, "10")
            expectation.fulfill()
        }
        
        wait(for: [expectation], timeout: 5.0)
    }

    func testFetchingWeatherDataFromNetwork() {
        
        mockCacheManager.clearAllCache()
        
        
        let expectation = XCTestExpectation(description: "Fetching data from network")
        
        weatherViewModel.getItemsList {
            
            XCTAssertTrue(!self.weatherViewModel.weatherData.isEmpty, "Expected non-empty weather data from network")
            expectation.fulfill()
        }
        
        wait(for: [expectation], timeout: 10.0) // Adjust timeout as needed based on network response times
    }
}
